# Generated by Django 5.2 on 2025-05-01 18:10

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('startDate', models.DateTimeField(db_column='startDate')),
                ('endDate', models.DateTimeField(db_column='endDate')),
                ('rent', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('deposit', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
            ],
            options={
                'db_table': 'Lease',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('postalCode', models.CharField(db_column='postalCode', max_length=20)),
                ('coordinates', django.contrib.gis.db.models.fields.PointField(srid=4326)),
            ],
            options={
                'db_table': 'Location',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('cognitoId', models.CharField(db_column='cognitoId', max_length=255, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', models.CharField(db_column='phoneNumber', max_length=20)),
            ],
            options={
                'db_table': 'Manager',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tenant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cognitoId', models.CharField(db_column='cognitoId', max_length=255, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('phoneNumber', models.CharField(db_column='phoneNumber', max_length=20)),
            ],
            options={
                'db_table': 'Tenant',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('amountDue', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amountPaid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('dueDate', models.DateTimeField()),
                ('paymentDate', models.DateTimeField()),
                ('paymentStatus', models.CharField(max_length=20)),
                ('lease', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo_app.lease')),
            ],
            options={
                'db_table': 'Payment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.AutoField(db_column='id', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='name', max_length=255)),
                ('description', models.TextField(db_column='description')),
                ('pricePerMonth', models.FloatField(db_column='pricePerMonth', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('securityDeposit', models.FloatField(db_column='securityDeposit', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('applicationFee', models.FloatField(db_column='applicationFee', validators=[django.core.validators.MinValueValidator(0.0)])),
                ('photoUrls', django.contrib.postgres.fields.ArrayField(base_field=models.URLField(), db_column='photoUrls', default=list, size=None)),
                ('amenities', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('WasherDryer', 'Washer/Dryer'), ('AirConditioning', 'Air Conditioning'), ('Dishwasher', 'Dishwasher'), ('HighSpeedInternet', 'High Speed Internet'), ('HardwoodFloors', 'Hardwood Floors'), ('WalkInClosets', 'Walk-In Closets'), ('Microwave', 'Microwave'), ('Refrigerator', 'Refrigerator'), ('Pool', 'Pool'), ('Gym', 'Gym'), ('Parking', 'Parking'), ('PetsAllowed', 'Pets Allowed'), ('WiFi', 'WiFi')], max_length=50), db_column='amenities', default=list, size=None)),
                ('highlights', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('HighSpeedInternetAccess', 'High Speed Internet Access'), ('WasherDryer', 'Washer/Dryer'), ('AirConditioning', 'Air Conditioning'), ('Heating', 'Heating'), ('SmokeFree', 'Smoke Free'), ('CableReady', 'Cable Ready'), ('SatelliteTV', 'Satellite TV'), ('DoubleVanities', 'Double Vanities'), ('TubShower', 'Tub/Shower'), ('Intercom', 'Intercom'), ('SprinklerSystem', 'Sprinkler System'), ('RecentlyRenovated', 'Recently Renovated'), ('CloseToTransit', 'Close to Transit'), ('GreatView', 'Great View'), ('QuietNeighborhood', 'Quiet Neighborhood')], max_length=50), db_column='highlights', default=list, size=None)),
                ('isPetsAllowed', models.BooleanField(db_column='isPetsAllowed', default=False)),
                ('isParkingIncluded', models.BooleanField(db_column='isParkingIncluded', default=False)),
                ('beds', models.PositiveIntegerField()),
                ('baths', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('squareFeet', models.PositiveIntegerField(db_column='squareFeet')),
                ('propertyType', models.CharField(choices=[('Rooms', 'Rooms'), ('Tinyhouse', 'Tinyhouse'), ('Apartment', 'Apartment'), ('Villa', 'Villa'), ('Townhouse', 'Townhouse'), ('Cottage', 'Cottage')], db_column='propertyType', max_length=20)),
                ('postedDate', models.DateTimeField(auto_now_add=True, db_column='postedDate')),
                ('averageRating', models.FloatField(db_column='averageRating', default=0.0, null=True)),
                ('numberOfReviews', models.PositiveIntegerField(db_column='numberOfReviews', default=0, null=True)),
                ('locationId', models.ForeignKey(db_column='locationId', on_delete=django.db.models.deletion.CASCADE, to='geo_app.location')),
                ('managerCognitoId', models.ForeignKey(db_column='managerCognitoId', on_delete=django.db.models.deletion.CASCADE, to='geo_app.manager', to_field='cognitoId')),
                ('favoritedBy', models.ManyToManyField(blank=True, related_name='favorites', to='geo_app.tenant')),
                ('tenants', models.ManyToManyField(blank=True, related_name='properties', to='geo_app.tenant')),
            ],
            options={
                'db_table': 'Property',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='lease',
            name='propertyId',
            field=models.ForeignKey(db_column='propertyId', on_delete=django.db.models.deletion.CASCADE, to='geo_app.property'),
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('applicationDate', models.DateTimeField()),
                ('status', models.CharField(max_length=20)),
                ('tenantCognitoId', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255)),
                ('phoneNumber', models.CharField(max_length=20)),
                ('message', models.TextField()),
                ('leaseId', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='geo_app.lease')),
                ('propertyId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geo_app.property')),
            ],
            options={
                'db_table': 'Application',
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='lease',
            name='tenantCognitoId',
            field=models.ForeignKey(db_column='tenantCognitoId', on_delete=django.db.models.deletion.CASCADE, to='geo_app.tenant', to_field='cognitoId'),
        ),
    ]
